plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	//id "com.wynprice.cursemaven" version "2.1.5"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group

repositories {
	maven {
		name = "Modmuss50"
		url = "https://maven.modmuss50.me/"
	}

	maven {
	name = "CottonMC"
		//url "https://server.bbkr.space:8081/artifactory/libs-release"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}

	maven { url "https://maven.shedaniel.me/" }

	maven {
		url "https://jitpack.io"
	}

	// mavenLocal()
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Auto Config
	//modImplementation "curse.maven:autoconfig:${project.autoconfig_version}"
	//modRuntime "curse.maven:autoconfig:${project.autoconfig_version}"
	//include "curse.maven:autoconfig:${project.autoconfig_version}"

	// Inventory Tabs
	//modImplementation "com.github.cakewhip:inventorytabs:${project.inventorytabs_version}"
	//modRuntime "com.github.cakewhip:inventorytabs:${project.inventorytabs_version}"
	modImplementation "com.github.Andrew6rant:inventorytabs:0.4.2-1.18.1"
	modRuntime "com.github.Andrew6rant:inventorytabs:0.4.2-1.18.1"

	// Testing
	// modImplementation "TechReborn:TechReborn-1.16:3.4.5+build.88"

	modApi("me.shedaniel.cloth:cloth-config-fabric:6.1.48") {
		exclude(group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
